# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      # 使用 npm  缓存
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are storeed in '~/.npm' on Linux/Mac os
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        run: npm install -g pnpm

      # 安装依赖
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      # 打包
      - name: Build project
        run: npm run build

      # build docker images
      - name: Build docker images
        run: docker build -t thiny_erp_web:latest ./

      - name: Login to Tencent registry
        run: docker login --username=${{secrets.DOCKER_HUB_USERNAME}} --password=${{secrets.DOCKER_HUB_PASSWORD}} ccr.ccs.tencentyun.com

      - name: Image Add Tag
        run: docker tag thiny_erp_web:latest ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web:latest

      - name: Push Image
        run: docker push ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web:latest

  run-image:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username:
            ${{ secrets.REMOTE_USER }}
            # key: ${{ secrets.SERVER_SSH_KEY }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            ## TODO: 初次部署会报错，由于不存在旧版镜像导致 stop、rm等命令参数不全
            # 停止旧版镜像
            docker stop $(docker ps -q --filter ancestor=ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web
            # 删除旧版容器
            docker rm -f $(docker ps -q -a --filter ancestor=ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web
            # 删除旧版镜像
            docker rmi -f ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web
            # 拉取 latest 版镜像
            docker pull ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web:latest
            # 运行 latest 版镜像
            docker run --name thiny_erp_web -d -p 8082:80 ccr.ccs.tencentyun.com/czj-hub/thiny_erp_web:latest
